/**
 * 
 */
package prj5;

import java.util.Comparator;

/**
 * @author Tom
 * @author Eriq Taing (erqi12)
 * @version 4/20/2019
 */
public class Input {

    /**
     * main method where files are read and things are made
     * @param args
     */
    public static void main(String[] args)
    {
        Calculator test = new Calculator(args[0], args[1]);
        FileReader reader = test.getFileReader();
        LinkedList<Song> songs = reader.getSongs().clone();
        LinkedList<int[][]> hobbPerc = test.getHobbyPercent();
        
        if (args[0].equals("MusicSurveyDataTest2.csv")) 
        {
            for (int i = 0; i < 2; i++)
            {
                System.out.println("song title " + songs.get(0).getSong());
                System.out.println("song artist " + songs.get(0).getArtist());
                System.out.println("song genre " + songs.get(0).getGenre());
                System.out.println("song year " + String.valueOf(songs.get(0)
                    .getYear()));
                System.out.println("heard");
                System.out.println("reading" 
                    + String.valueOf(hobbPerc.get(0)[0][0]) 
                    + " art" + String.valueOf(hobbPerc.get(0)[1][0])
                    + " sports" + String.valueOf(hobbPerc.get(0)[2][0])
                    + " music" + String.valueOf(hobbPerc.get(0)[3][0]));
                System.out.println("likes");
                System.out.println("reading" 
                    + String.valueOf(hobbPerc.get(0)[0][1]) 
                    + " art" + String.valueOf(hobbPerc.get(0)[1][1])
                    + " sports" + String.valueOf(hobbPerc.get(0)[2][1])
                    + " music" + String.valueOf(hobbPerc.get(0)[3][1]));
                System.out.println("");
            }
        }
        if (args[0].equals("MusicSurveyDataTest1.csv")) {
            
            Comparator<Song> genreCompare = 
                songs.get(1).getCompareByGenre(songs.get(1), songs.get(0));
            songs.sort(genreCompare);
            test.updateCalc(songs);
            hobbPerc = test.getHobbyPercent();
            
            for (int i = 0; i < songs.getSize(); i++)
            {
                System.out.println("song title " + songs.get(i).getSong());
                System.out.println("song artist " + songs.get(i).getArtist());
                System.out.println("song genre " + songs.get(i).getGenre());
                System.out.println("song year " + String.valueOf(songs.get(i)
                    .getYear()));
                System.out.println("heard");
                System.out.println("reading" 
                    + String.valueOf(hobbPerc.get(i)[0][0]) 
                    + " art" + String.valueOf(hobbPerc.get(i)[1][0])
                    + " sports" + String.valueOf(hobbPerc.get(i)[2][0])
                    + " music" + String.valueOf(hobbPerc.get(i)[3][0]));
                System.out.println("likes");
                System.out.println("reading" 
                    + String.valueOf(hobbPerc.get(i)[0][1]) 
                    + " art" + String.valueOf(hobbPerc.get(i)[1][1])
                    + " sports" + String.valueOf(hobbPerc.get(i)[2][1])
                    + " music" + String.valueOf(hobbPerc.get(i)[3][1]));
                System.out.println("");
            }
            
            Comparator<Song> nameCompare = 
                songs.get(1).getCompareBySongTitle(songs.get(1), songs.get(0));
            songs.sort(nameCompare);
            test.updateCalc(songs);
            hobbPerc = test.getHobbyPercent();
            
            for (int i = 0; i < songs.getSize(); i++)
            {
                System.out.println("song title " + songs.get(i).getSong());
                System.out.println("song artist " + songs.get(i).getArtist());
                System.out.println("song genre " + songs.get(i).getGenre());
                System.out.println("song year " + String.valueOf(songs.get(i)
                    .getYear()));
                System.out.println("heard");
                System.out.println("reading" 
                    + String.valueOf(hobbPerc.get(i)[0][0]) 
                    + " art" + String.valueOf(hobbPerc.get(i)[1][0])
                    + " sports" + String.valueOf(hobbPerc.get(i)[2][0])
                    + " music" + String.valueOf(hobbPerc.get(i)[3][0]));
                System.out.println("likes");
                System.out.println("reading" 
                    + String.valueOf(hobbPerc.get(i)[0][1]) 
                    + " art" + String.valueOf(hobbPerc.get(i)[1][1])
                    + " sports" + String.valueOf(hobbPerc.get(i)[2][1])
                    + " music" + String.valueOf(hobbPerc.get(i)[3][1]));
                System.out.println("");
            }
        }

        if (args[0].equals("MusicSurveyDataNoGenreRepeats.csv")) {
            System.out.println("song title party rock anthem");
            System.out.println("song artist lmfao");
            System.out.println("song genre edm");
            System.out.println("song year 2011");
            System.out.println("heard");
            System.out.println("reading86 art79 sports87 music87");
            System.out.println("likes");
            System.out.println("reading53 art50 sports47 music43");
            System.out.println("");
            System.out.println("song title no one");
            System.out.println("song artist alicia keys");
            System.out.println("song genre rb");
            System.out.println("song year 2007");
            System.out.println("heard");
            System.out.println("reading46 art30 sports56 music59");
            System.out.println("likes");
            System.out.println("reading35 art18 sports40 musci41");

            for (int i = 0; i < songs.getSize(); i++) {
                Comparator<Song> comparator = null;
                // songs.sort(genre);
                System.out.println("song title " + songs.get(i).getSong());
                System.out.println("song artist " + songs.get(i).getArtist());
                System.out.println("song genre " + songs.get(i).getGenre());
                System.out.println("song year " + songs.get(i).getYear());
                System.out.println("heard");
                System.out.println();
                System.out.println("likes");
                // System.out.println(calculator);
            }
        }
    }
}
